>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer((1))
99

>>> add_integer(1, (2))
3

>>> add_integer(3, 'b')
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer('a', 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer([1, 2, 3], 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, [1, 2, 3])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer([], 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, [])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer((1,), 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, (1,))
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer({}, 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, {})
Traceback (most recent call last):
TypeError: b must be an integer
